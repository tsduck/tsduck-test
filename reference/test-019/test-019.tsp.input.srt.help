
Receive TS packets from Secure Reliable Transport (SRT)

Usage: tsp -I srt [options] [[address:]port]

Parameter:

  Remote address:port. This is a legacy parameter, now use --caller.

Options:

  --backlog value
      With --listener, specify the number of allowed waiting incoming clients.
      The default is one.

  --bufferapi
      When set, this socket uses the Buffer API. The default is Message API.

  -c ip-address:port
  --caller ip-address:port
      Use SRT in caller (or rendezvous) mode. The parameter specifies the IP
      remote address (or host name) and UDP port. If --listener is also
      specified, the SRT socket works in rendezvous mode.

  --conn-timeout milliseconds
      Connect timeout, in milliseconds. SRT cannot connect for RTT > 1500 msec
      (2 handshake exchanges) with the default connect timeout of 3 seconds.
      This option applies to the caller and rendezvous connection modes. The
      connect timeout is 10 times the value set for the rendezvous mode (which
      can be used as a workaround for this connection problem with earlier
      versions).

  -d seconds
  --display-interval seconds
      Specify the interval in seconds between two displays of the evaluated
      real-time input bitrate. The default is to never display the bitrate.
      This option is ignored if --evaluation-interval is not specified.

  --enforce-encryption
      This option enforces that both connection parties have the same
      passphrase set (including empty, that is, with no encryption), or
      otherwise the connection is rejected.

  -e seconds
  --evaluation-interval seconds
      Specify that the real-time input bitrate shall be evaluated on a regular
      basis. The value specifies the number of seconds between two evaluations.
      By default, the real-time input bitrate is never evaluated and the input
      bitrate is evaluated from the PCR in the input packets.

  --ffs value
      Flight Flag Size (maximum number of bytes that can be sent without being
      acknowledged).

  --final-statistics
      Report SRT usage statistics when the SRT socket is closed. This option is
      implicit with --statistics-interval.

  --help
      Display this help text.

  --input-bw value
      This option is effective only if SRTO_MAXBW is set to 0 (relative). It
      controls the maximum bandwidth together with SRTO_OHEADBW option
      according to the formula: MAXBW = INPUTBW * (100 + OHEADBW) / 100. When
      this option is set to 0 (automatic) then the real INPUTBW value will be
      estimated from the rate of the input (cases when the application calls
      the srt_send* function) during transmission.Recommended: set this option
      to the predicted bitrate of your live stream and keep default 25% value
      for SRTO_OHEADBW.

  --iptos value
      IPv4 Type of Service (see IP_TOS option for IP) or IPv6 Traffic Class
      (see IPV6_TCLASS of IPv6) depending on socket address family. Applies to
      sender only. Sender: user configurable, default: 0xB8.

  --ipttl value
      IPv4 Time To Live (see IP_TTL option for IP) or IPv6 unicast hops (see
      IPV6_UNICAST_HOPS for IPV6) depending on socket address family. Applies
      to sender only, default: 64.

  --json-line[='prefix']
      With --statistics-interval or --final-statistics, report the statistics
      as one single line in JSON format. The optional string parameter
      specifies a prefix to prepend on the log line before the JSON text to
      locate the appropriate line in the logs.

  --kmpreannounce value
      The interval (defined in packets) between when a new Stream Encrypting
      Key (SEK) is sent and when switchover occurs. This value also applies to
      the subsequent interval between when switchover occurs and when the old
      SEK is decommissioned. Note: The allowed range for this value is between
      1 and half of the current value of SRTO_KMREFRESHRATE. The minimum value
      should never be less than the flight window (i.e. the number of packets
      that have already left the sender but have not yet arrived at the
      receiver).

  --kmrefreshrate value
      The number of packets to be transmitted after which the Stream Encryption
      Key (SEK), used to encrypt packets, will be switched to the new one. Note
      that the old and new keys live in parallel for a certain period of time
      (see SRTO_KMPREANNOUNCE) before and after the switchover.

  --latency value
      This flag sets both SRTO_RCVLATENCY and SRTO_PEERLATENCY to the same
      value. Note that prior to version 1.3.0 this is the only flag to set the
      latency, however this is effectively equivalent to setting
      SRTO_PEERLATENCY, when the side is sender (see SRTO_SENDER) and
      SRTO_RCVLATENCY when the side is receiver, and the bidirectional stream
      sending in version 1.2.0is not supported.

  --linger value
      Linger time on close. Define how long, in seconds, to enable queued data
      to be sent after end of stream. Default: no linger.

  -l [ip-address:]port
  --listener [ip-address:]port
      Use SRT in listener (or rendezvous) mode. The parameter specifies the IP
      local address and UDP port on which the SRT socket listens. The address
      is optional, the port is mandatory. If --caller is also specified, the
      SRT socket works in rendezvous mode.

  --local-interface ip-address
      In caller mode, use the specified local IP interface for outgoing
      connections. This option is incompatible with --listener.

  --lossmaxttl value
      The value up to which the Reorder Tolerance may grow. When Reorder
      Tolerance is > 0, then packet loss report is delayed until that number of
      packets come in. Reorder Tolerance increases every time a 'belated'
      packet has come, but it wasn't due to retransmission (that is, when UDP
      packets tend to come out of order), with the difference between the
      latest sequence and this packet's sequence, and not more than the value
      of this option. By default it's 0, which means that this mechanism is
      turned off, and the loss report is always sent immediately upon
      experiencing a 'gap' in sequences.

  --max-bw value
      Maximum send bandwidth. NOTE: This option has a default value of -1.
      Although in case when the stream rate is mostly constant it is
      recommended to use value 0 here and shape the bandwidth limit using
      SRTO_INPUTBW and SRTO_OHEADBW options.

  --messageapi
      Use the Message API. This is now the default, use --bufferapi to disable
      it.

  --min-version value
      The minimum SRT version that is required from the peer. A connection to a
      peer that does not satisfy the minimum version requirement will be
      rejected.

  --mss value
      Maximum Segment Size. Used for buffer allocation and rate calculation
      using packet counter assuming fully filled packets. The smallest MSS
      between the peers is used. This is 1500 by default in the overall
      internet. This is the maximum size of the UDP packet and can be only
      decreased, unless you have some unusual dedicated network settings. Not
      to be mistaken with the size of the UDP payload or SRT payload - this
      size is the size of the IP packet, including the UDP and SRT headers.

  -m
  --multiple
      When the sender peer disconnects, wait for another one and continue.

  --nakreport
      When this option is specified, the receiver will send UMSG_LOSSREPORT
      messages periodically until the lost packet is retransmitted or
      intentionally dropped.

  --no-reuse-port
      With --listener, disable the reuse port socket option. Do not use unless
      completely necessary.

  --ohead-bw value
      Recovery bandwidth overhead above input rate (see SRTO_INPUTBW). It is
      effective only if SRTO_MAXBW is set to 0.

  --packet-filter value
      Set up the packet filter. The string must match appropriate syntax for
      packet filter setup.See: https://github.
      com/Haivision/srt/blob/master/docs/packet-filtering-and-fec.md

  --passphrase value
      Sets the passphrase for encryption. This turns encryption on on this side
      (or turns it off, if empty passphrase is passed).

  --payload-size value
      Sets the maximum declared size of a single call to sending function in
      Live mode. Use 0 if this value isn't used (which is default in file
      mode). This value shall not be exceeded for a single data sending
      instruction in Live mode.

  --pbkeylen value
      Sender encryption key length, can be 0, 16 (AES-128), 24 (AES-192), 32
      (AES-256).

  --peer-idle-timeout value
      The maximum time in [ms] to wait until any packet is received from peer
      since the last such packet reception. If this time is passed, connection
      is considered broken on timeout.

  --peer-latency value
      The latency value (as described in SRTO_RCVLATENCY) that is set by the
      sender side as a minimum value for the receiver.

  --polling-time value
      Epoll timeout value (in ms) for non-blocking mode

  --rcv-latency value
      The time that should elapse since the moment when the packet was sent and
      the moment when it's delivered to the receiver application in the
      receiving function.

  --rcvbuf value
      Receive Buffer Size.

  --rendezvous [address:]port
      Local address and port. This is a legacy option, now use --listener.

  --restart-delay milliseconds
      With --multiple, wait the specified delay before restarting.

  --rs204
      Specify that all packets are in 204-byte format. By default, the input
      packet size, 188 or 204 bytes, is automatically detected. Use this option
      only when necessary.

  --sndbuf value
      Send Buffer Size. Warning: configured in bytes, converted in packets,
      when set, based on MSS value. For desired result, configure MSS first.

  --statistics-interval milliseconds
      Report SRT usage statistics at regular intervals, in milliseconds. The
      specified interval is a minimum value, actual reporting can occur only
      when data are exchanged over the SRT socket.

  --streamid value
      A string limited to 512 characters that can be set on the socket prior to
      connecting. This stream ID will be able to be retrieved by the listener
      side from the socket that is returned from srt_accept and was connected
      by a socket with that set stream ID (so you usually use SET on the socket
      used for srt_connect and GET on the socket retrieved from srt_accept).
      This string can be used completely free-form, however it's highly
      recommended to follow the SRT Access Control guidlines.

  --timestamp-priority name
      Specify how the input timestamp of each packet is computed. The name
      specifies an ordered list. The first available timestamp value is used as
      input timestamp. The possible timestamp sources are:
      - rtp : The RTP time stamp, when the UDP packet is an RTP packet.
      - srt : SRT source time stamp.
      - tsp : A software timestamp, provided by tsp when the input plugin
      returns a chunk of packets.
      The tsp-provided timestamp is always available, always comes last and is
      less precise. The default is rtp-srt-tsp.
      The 'name' must be one of "rtp-srt-tsp", "rtp-tsp", "srt-rtp-tsp",
      "srt-tsp", "tsp".

  --tlpktdrop value
      Too-late Packet Drop. When enabled on receiver, it skips missing packets
      that have not been delivered in time and delivers the subsequent packets
      to the application when their time-to-play has come. It also sends a fake
      ACK to the sender. When enabled on sender and enabled on the receiving
      peer, sender drops the older packets that have no chance to be delivered
      in time. It is automatically enabled in sender if receiver supports it.

  --transtype value
      Sets the transmission type for the socket, in particular, setting this
      option sets multiple other parameters to their default values as required
      for a particular transmission type.

  --udp-rcvbuf value
      UDP socket receive buffer size in bytes.

  --udp-sndbuf value
      UDP socket send buffer size in bytes.

