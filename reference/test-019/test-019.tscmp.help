
Compare two transport stream files

Usage: tscmp [options] filename-1 filename-2

Parameters:

  MPEG capture files to be compared.

Options:

  --buffered-packets count
      Specifies the files input buffer size in TS packets. This is used with
      --search-reorder to look for reordered packets. Packets which are not
      found within that range in the other file are considered missing. The
      default is 10,000 TS packets.

  -b value
  --byte-offset value
      Start reading the files at the specified byte offset. The default is 0.

  --cc-ignore
      Ignore continuity counters when comparing packets. Useful if one file has
      been resynchronized.

  -c
  --continue
      Continue the comparison up to the end of files. By default, stop after
      the first differing packet.

  --debug[=level]
      Produce debug traces. The default level is 1. Higher levels produce more
      messages.

  -d
  --dump
      Dump the content of all differing packets.

  -f name
  --format name
      Specify the format of the input TS file. By default, the format is
      automatically detected. But the auto-detection may fail in some cases
      (for instance when the first timestamp of an M2TS file starts with 0x47).
      Using this option forces a specific format.
      The 'name' must be one of "autodetect", "duck", "M2TS", "RS204", "TS".

  --help
      Display this help text.

  -j
  --json
      Report the differences in JSON output format.

  --json-buffer-size value
      With --json-tcp or --json-udp, specify the network socket send buffer
      size in bytes.

  --json-line[='prefix']
      Report the differences in JSON output format. Report the JSON text as one
      single line in the message logger. The optional string parameter
      specifies a prefix to prepend on the log line before the JSON text to
      locate the appropriate line in the logs.

  --json-tcp ip-address:port
      Report the differences in JSON output format. Report the JSON text as one
      single line in a TCP connection. The address specifies an IP address or a
      host name that translates to an IP address. The port specifies the
      destination TCP port. By default, a new TCP connection is established
      each time a JSON message is produced. Be aware that a complete TCP
      connection cycle may introduce some latency in the processing. If latency
      is an issue, consider using --json-udp.

  --json-tcp-keep
      With --json-tcp, keep the TCP connection open for all JSON messages. By
      default, a new TCP connection is established each time a JSON message is
      produced.

  --json-udp ip-address:port
      Report the differences in JSON output format. Report the JSON text as one
      single line in a UDP datagram. The address specifies an IP address which
      can be either unicast or multicast. It can be also a host name that
      translates to an IP address. The port specifies the destination UDP port.
      Be aware that the size of UDP datagrams is limited by design to 64 kB. If
      larger JSON contents are expected, consider using --json-tcp.

  --json-udp-local ip-address
      With --json-udp, when the destination is a multicast address, specify the
      IP address of the outgoing local interface. It can be also a host name
      that translates to a local address.

  --json-udp-ttl value
      With --json-udp, specifies the TTL (Time-To-Live) socket option. The
      actual option is either "Unicast TTL" or "Multicast TTL", depending on
      the destination address. Remember that the default Multicast TTL is 1 on
      most systems.

  -m count
  --min-reorder count
      With --search-reorder, this is the minimum number of consecutive packets
      to consider in reordered sequences of packets. The default is 7 TS
      packets.

  -n
  --normalized
      Report in a normalized output format (useful for automatic analysis).

  -p count
  --packet-offset count
      Start reading the files at the specified TS packet. The default is 0.

  --payload-only
      Compare only the payload of the packets, ignore header and adaptation
      field.

  --pcr-ignore
      Ignore PCR and OPCR when comparing packets. Useful if one file has been
      resynchronized.

  --pid-ignore
      Ignore PID value when comparing packets. Useful if one file has gone
      through a remapping process.

  -q
  --quiet
      Do not output any message. The process simply terminates with a success
      status if the files are identical and a failure status if they differ.

  -s
  --search-reorder
      Search missing or reordered packets. By default, packets are compared one
      by one. See also --threshold-diff and --buffered-packets.

  --subset
      Legacy option, same as --search-reorder

  -t count
  --threshold-diff count
      When used with --search-reorder, this value specifies the maximum number
      of differing bytes in packets to declare them equal. When two packets
      have more differing bytes than this threshold, the packets are reported
      as different and the first file is read ahead. The default is zero, which
      means that two packets must be strictly identical to declare them equal.

  -v
  --verbose
      Produce verbose output.

  --version[=name]
      Display the TSDuck version number.
      The 'name' must be one of "acceleration", "all", "bitrate", "compiler",
      "crypto", "date", "dektec", "http", "integer", "long", "rist", "short",
      "srt", "system", "tls", "vatek", "zlib".

